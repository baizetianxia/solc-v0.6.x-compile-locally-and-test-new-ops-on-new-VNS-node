pragma solidity >=0.4.21 <0.7.0;

import './Factory.sol';
import './Adder.sol';

contract Tester {
    Adder add1;
    Adder add2;
    constructor(address factory,uint256 salt) public{
        add1 = Adder(Factory(factory).deployByCreate1(
                hex"606060405234610000575b60ad806100186000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063771602f714603c575b6000565b34600057605d60048080359060200190919080359060200190919050506073565b6040518082815260200191505060405180910390f35b600081830190505b929150505600a165627a7a723058205d7bec00c6d410f7ea2a3b03112b597bb3ef544439889ecc1294a77b85eab15e0029"
            ));

        add2 = Adder(Factory(factory).deployByCreate2(
                hex"606060405234610000575b60ad806100186000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063771602f714603c575b6000565b34600057605d60048080359060200190919080359060200190919050506073565b6040518082815260200191505060405180910390f35b600081830190505b929150505600a165627a7a723058205d7bec00c6d410f7ea2a3b03112b597bb3ef544439889ecc1294a77b85eab15e0029",
                salt
            ));

        require(address(add1) != address(0));
        require(address(add2) != address(0));

    }

    function testAdd1(uint x, uint y) view public returns (uint){
        return add1.add(x,y);
    }

    function testAdd2(uint x, uint y) view public returns (uint){
        return add2.add(x,y);
    }
}
